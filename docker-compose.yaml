
services:
#  frontend:
#    image: node:18
#    ports:
#      - "5173:5173"
#    volumes:
#      - ./frontend:/app/frontend
#      - ./entrypoint.sh:/app/entrypoint.sh
#    working_dir: /app/frontend
#    entrypoint: ["/app/entrypoint.sh"]

  api:
    build:
        context: ./services/api
        dockerfile: Dockerfile
        target: dev
    volumes:
        - ./services/api:/app
    ports:
        - "8080:8080"
    env_file: ".env"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672" # dashboard
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 10s
      retries: 5

  file-parser:
    build:
      context: ./services/file-parser
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./services/file-parser:/app
    env_file: ".env"
    depends_on:
      rabbitmq:
        condition: service_healthy

  quiz-generator:
    build:
      context: ./services/quiz-generator
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./services/quiz-generator:/app
    env_file: ".env"
    depends_on:
      rabbitmq:
        condition: service_healthy

  prometheus:
    image: prom/prometheus
    volumes:
      - ./services/metrics/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090" # localhost:9091 -> prometheus web UI

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  grafana-storage: